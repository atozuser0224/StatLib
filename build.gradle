plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
    id('com.github.johnrengelman.shadow') version "8.1.1"

}

group = 'org.gang'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url "https://s01.oss.sonatype.org/content/groups/public/" }
    maven { url = "https://repo.codemc.org/repository/maven-public/" }
    maven {
        url 'https://jitpack.io'
    }
}


dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'io.github.rysefoxx.inventory:RyseInventory-Plugin:1.5.7'
    implementation "dev.jorel:commandapi-bukkit-shade:9.3.0"
    compileOnly 'com.github.LoneDev6:API-ItemsAdder:3.6.1'

}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
kotlin {
    jvmToolchain(17)
}
shadowJar{
    archivesBaseName = 'bossManager'
    manifest {
        attributes 'Main-Class': 'org.zepelown.kotlintestplugin.KotlinTestPlugin'
    }
    relocate("dev.jorel.commandapi", "my.custom.package.commandapi")

}
